{
  "address": "0xd82B2923d3EF290ed01Ad9f2cD41d6ed114Ae58e",
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        { "name": "operator", "type": "address", "internalType": "address" },
        { "name": "maxCount", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "approve",
      "inputs": [
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "balanceOf",
      "inputs": [
        { "name": "owner", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "bark",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getApproved",
      "inputs": [
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isApprovedForAll",
      "inputs": [
        { "name": "owner", "type": "address", "internalType": "address" },
        { "name": "operator", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "mint",
      "inputs": [
        { "name": "receiver", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "name",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "nextDoink",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "ownerOf",
      "inputs": [
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "safeTransferFrom",
      "inputs": [
        { "name": "from", "type": "address", "internalType": "address" },
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "safeTransferFrom",
      "inputs": [
        { "name": "from", "type": "address", "internalType": "address" },
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" },
        { "name": "data", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setApprovalForAll",
      "inputs": [
        { "name": "operator", "type": "address", "internalType": "address" },
        { "name": "approved", "type": "bool", "internalType": "bool" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "supportsInterface",
      "inputs": [
        { "name": "interfaceId", "type": "bytes4", "internalType": "bytes4" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "symbol",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "tokenURI",
      "inputs": [
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "transferFrom",
      "inputs": [
        { "name": "from", "type": "address", "internalType": "address" },
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "Approval",
      "inputs": [
        {
          "name": "owner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "approved",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ApprovalForAll",
      "inputs": [
        {
          "name": "owner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "operator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "approved",
          "type": "bool",
          "indexed": false,
          "internalType": "bool"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Minted",
      "inputs": [
        {
          "name": "receiver",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "id",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Transfer",
      "inputs": [
        {
          "name": "from",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "to",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "ERC721IncorrectOwner",
      "inputs": [
        { "name": "sender", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" },
        { "name": "owner", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "ERC721InsufficientApproval",
      "inputs": [
        { "name": "operator", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "ERC721InvalidApprover",
      "inputs": [
        { "name": "approver", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "ERC721InvalidOperator",
      "inputs": [
        { "name": "operator", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "ERC721InvalidOwner",
      "inputs": [
        { "name": "owner", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "ERC721InvalidReceiver",
      "inputs": [
        { "name": "receiver", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "ERC721InvalidSender",
      "inputs": [
        { "name": "sender", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "ERC721NonexistentToken",
      "inputs": [
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ]
    }
  ],
  "bytecode": {
    "object": "0x60c060405260016006553480156200001657600080fd5b5060405162001b9638038062001b968339810160408190526200003991620000c9565b60405180604001604052806005815260200164446f696e6b60d81b81525060405180604001604052806005815260200164444f494e4b60d81b8152508160009081620000869190620001ac565b506001620000958282620001ac565b5050506001600160a01b038216620000b1573360a052620000bf565b6001600160a01b03821660a0525b6080525062000278565b60008060408385031215620000dd57600080fd5b82516001600160a01b0381168114620000f557600080fd5b6020939093015192949293505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200013057607f821691505b6020821081036200015157634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001a7576000816000526020600020601f850160051c81016020861015620001825750805b601f850160051c820191505b81811015620001a3578281556001016200018e565b5050505b505050565b81516001600160401b03811115620001c857620001c862000105565b620001e081620001d984546200011b565b8462000157565b602080601f831160018114620002185760008415620001ff5750858301515b600019600386901b1c1916600185901b178555620001a3565b600085815260208120601f198616915b82811015620002495788860151825594840194600190910190840162000228565b5085821015620002685787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a0516118f86200029e60003960006105890152600061063b01526118f86000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80636a62784211610097578063a22cb46511610066578063a22cb46514610210578063b88d4fde14610223578063c87b56dd14610236578063e985e9c51461024957600080fd5b80636a627842146101da57806370a08231146101ed578063864f4a9a1461020057806395d89b411461020857600080fd5b806323b872dd116100d357806323b872dd1461018f57806342842e0e146101a2578063534cfa3d146101b55780636352211e146101c757600080fd5b806301ffc9a71461010557806306fdde031461012d578063081812fc14610142578063095ea7b31461017a575b600080fd5b6101186101133660046114ac565b610292565b60405190151581526020015b60405180910390f35b610135610377565b6040516101249190611537565b61015561015036600461154a565b610409565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610124565b61018d610188366004611587565b61043f565b005b61018d61019d3660046115b1565b61044e565b61018d6101b03660046115b1565b610544565b6006545b604051908152602001610124565b6101556101d536600461154a565b610564565b6101b96101e83660046115ed565b61056f565b6101b96101fb3660046115ed565b61080d565b610135610888565b610135610934565b61018d61021e366004611608565b610943565b61018d610231366004611673565b61094e565b61013561024436600461154a565b610965565b61011861025736600461176d565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260056020908152604080832093909416825291909152205460ff1690565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f80ac58cd00000000000000000000000000000000000000000000000000000000148061032557507fffffffff0000000000000000000000000000000000000000000000000000000082167f5b5e139f00000000000000000000000000000000000000000000000000000000145b8061037157507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b606060008054610386906117a0565b80601f01602080910402602001604051908101604052809291908181526020018280546103b2906117a0565b80156103ff5780601f106103d4576101008083540402835291602001916103ff565b820191906000526020600020905b8154815290600101906020018083116103e257829003601f168201915b5050505050905090565b6000610414826109da565b5060008281526004602052604090205473ffffffffffffffffffffffffffffffffffffffff16610371565b61044a828233610a39565b5050565b73ffffffffffffffffffffffffffffffffffffffff82166104a3576040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600060048201526024015b60405180910390fd5b60006104b0838333610a46565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461053e576040517f64283d7b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8086166004830152602482018490528216604482015260640161049a565b50505050565b61055f8383836040518060200160405280600081525061094e565b505050565b6000610371826109da565b60003373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610636576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f556e617574686f72697a656420746f2063616c6c20746869732066756e63746960448201527f6f6e2e0000000000000000000000000000000000000000000000000000000000606482015260840161049a565b6006547f000000000000000000000000000000000000000000000000000000000000000081106106c2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f4d617820726561636865642e0000000000000000000000000000000000000000604482015260640161049a565b6001600660008282546106d591906117f3565b909155505073ffffffffffffffffffffffffffffffffffffffff831660009081526007602052604090205460ff161561076a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f416c7265616479206d696e7465642e0000000000000000000000000000000000604482015260640161049a565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260076020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790556107c28382610bc3565b604051819073ffffffffffffffffffffffffffffffffffffffff8516907f30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe90600090a390505b919050565b600073ffffffffffffffffffffffffffffffffffffffff821661085f576040517f89c62b640000000000000000000000000000000000000000000000000000000081526000600482015260240161049a565b5073ffffffffffffffffffffffffffffffffffffffff1660009081526003602052604090205490565b606060006108953361080d565b116108fc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f596f75206e656564206120646f696e6b20746f206261726b2100000000000000604482015260640161049a565b5060408051808201909152600581527f626f696e6b000000000000000000000000000000000000000000000000000000602082015290565b606060018054610386906117a0565b61044a338383610bdd565b61095984848461044e565b61053e84848484610cda565b6060610970826109da565b50600061098860408051602081019091526000815290565b905060008151116109a857604051806020016040528060008152506109d3565b806109b284610ed1565b6040516020016109c392919061182d565b6040516020818303038152906040525b9392505050565b60008181526002602052604081205473ffffffffffffffffffffffffffffffffffffffff1680610371576040517f7e2732890000000000000000000000000000000000000000000000000000000081526004810184905260240161049a565b61055f8383836001610f8f565b60008281526002602052604081205473ffffffffffffffffffffffffffffffffffffffff90811690831615610a8057610a8081848661115a565b73ffffffffffffffffffffffffffffffffffffffff811615610af657610aaa600085600080610f8f565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260036020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190555b73ffffffffffffffffffffffffffffffffffffffff851615610b3f5773ffffffffffffffffffffffffffffffffffffffff85166000908152600360205260409020805460010190555b60008481526002602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff89811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b61044a82826040518060200160405280600081525061120a565b73ffffffffffffffffffffffffffffffffffffffff8216610c42576040517f5b08ba1800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8316600482015260240161049a565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526005602090815260408083209487168084529482529182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff83163b1561053e576040517f150b7a0200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84169063150b7a0290610d4f90339088908790879060040161185c565b6020604051808303816000875af1925050508015610da8575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252610da5918101906118a5565b60015b610e37573d808015610dd6576040519150601f19603f3d011682016040523d82523d6000602084013e610ddb565b606091505b508051600003610e2f576040517f64a0ae9200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8516600482015260240161049a565b805181602001fd5b7fffffffff0000000000000000000000000000000000000000000000000000000081167f150b7a020000000000000000000000000000000000000000000000000000000014610eca576040517f64a0ae9200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8516600482015260240161049a565b5050505050565b60606000610ede83611221565b600101905060008167ffffffffffffffff811115610efe57610efe611644565b6040519080825280601f01601f191660200182016040528015610f28576020820181803683370190505b5090508181016020015b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8504945084610f3257509392505050565b8080610fb0575073ffffffffffffffffffffffffffffffffffffffff821615155b15611105576000610fc0846109da565b905073ffffffffffffffffffffffffffffffffffffffff83161580159061101357508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b8015611052575073ffffffffffffffffffffffffffffffffffffffff80821660009081526005602090815260408083209387168352929052205460ff16155b156110a1576040517fa9fbf51f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8416600482015260240161049a565b811561110357838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b611165838383611303565b61055f5773ffffffffffffffffffffffffffffffffffffffff83166111b9576040517f7e2732890000000000000000000000000000000000000000000000000000000081526004810182905260240161049a565b6040517f177e802f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff831660048201526024810182905260440161049a565b61121483836113ca565b61055f6000848484610cda565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000831061126a577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310611296576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106112b457662386f26fc10000830492506010015b6305f5e10083106112cc576305f5e100830492506008015b61271083106112e057612710830492506004015b606483106112f2576064830492506002015b600a83106103715760010192915050565b600073ffffffffffffffffffffffffffffffffffffffff8316158015906113c257508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611391575073ffffffffffffffffffffffffffffffffffffffff80851660009081526005602090815260408083209387168352929052205460ff165b806113c2575060008281526004602052604090205473ffffffffffffffffffffffffffffffffffffffff8481169116145b949350505050565b73ffffffffffffffffffffffffffffffffffffffff821661141a576040517f64a0ae920000000000000000000000000000000000000000000000000000000081526000600482015260240161049a565b600061142883836000610a46565b905073ffffffffffffffffffffffffffffffffffffffff81161561055f576040517f73c6ac6e0000000000000000000000000000000000000000000000000000000081526000600482015260240161049a565b7fffffffff00000000000000000000000000000000000000000000000000000000811681146114a957600080fd5b50565b6000602082840312156114be57600080fd5b81356109d38161147b565b60005b838110156114e45781810151838201526020016114cc565b50506000910152565b600081518084526115058160208601602086016114c9565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006109d360208301846114ed565b60006020828403121561155c57600080fd5b5035919050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461080857600080fd5b6000806040838503121561159a57600080fd5b6115a383611563565b946020939093013593505050565b6000806000606084860312156115c657600080fd5b6115cf84611563565b92506115dd60208501611563565b9150604084013590509250925092565b6000602082840312156115ff57600080fd5b6109d382611563565b6000806040838503121561161b57600080fd5b61162483611563565b91506020830135801515811461163957600080fd5b809150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000806000806080858703121561168957600080fd5b61169285611563565b93506116a060208601611563565b925060408501359150606085013567ffffffffffffffff808211156116c457600080fd5b818701915087601f8301126116d857600080fd5b8135818111156116ea576116ea611644565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171561173057611730611644565b816040528281528a602084870101111561174957600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561178057600080fd5b61178983611563565b915061179760208401611563565b90509250929050565b600181811c908216806117b457607f821691505b6020821081036117ed577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b80820180821115610371577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000835161183f8184602088016114c9565b8351908301906118538183602088016114c9565b01949350505050565b600073ffffffffffffffffffffffffffffffffffffffff80871683528086166020840152508360408301526080606083015261189b60808301846114ed565b9695505050505050565b6000602082840312156118b757600080fd5b81516109d38161147b56fea26469706673582212202b037d68ff0ea08857517ce431ef219ce1048f96f6b59b7c2dc3121adde3846864736f6c63430008170033",
    "sourceMap": "117:1570:31:-:0;;;246:1;213:34;;672:243;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1381:113:21;;;;;;;;;;;;;-1:-1:-1;;;1381:113:21;;;;;;;;;;;;;;;;-1:-1:-1;;;1381:113:21;;;1455:5;1447;:13;;;;;;:::i;:::-;-1:-1:-1;1470:7:21;:17;1480:7;1470;:17;:::i;:::-;-1:-1:-1;;;;;;;;759:22:31;::::1;755:124;;808:10;797:21;::::0;755:124:::1;;;-1:-1:-1::0;;;;;849:19:31;::::1;;::::0;755:124:::1;888:20;::::0;-1:-1:-1;117:1570:31;;14:351:33;93:6;101;154:2;142:9;133:7;129:23;125:32;122:52;;;170:1;167;160:12;122:52;196:16;;-1:-1:-1;;;;;241:31:33;;231:42;;221:70;;287:1;284;277:12;221:70;355:2;340:18;;;;334:25;310:5;;334:25;;-1:-1:-1;;;14:351:33:o;370:127::-;431:10;426:3;422:20;419:1;412:31;462:4;459:1;452:15;486:4;483:1;476:15;502:380;581:1;577:12;;;;624;;;645:61;;699:4;691:6;687:17;677:27;;645:61;752:2;744:6;741:14;721:18;718:38;715:161;;798:10;793:3;789:20;786:1;779:31;833:4;830:1;823:15;861:4;858:1;851:15;715:161;;502:380;;;:::o;1013:543::-;1115:2;1110:3;1107:11;1104:446;;;1151:1;1175:5;1172:1;1165:16;1219:4;1216:1;1206:18;1289:2;1277:10;1273:19;1270:1;1266:27;1260:4;1256:38;1325:4;1313:10;1310:20;1307:47;;;-1:-1:-1;1348:4:33;1307:47;1403:2;1398:3;1394:12;1391:1;1387:20;1381:4;1377:31;1367:41;;1458:82;1476:2;1469:5;1466:13;1458:82;;;1521:17;;;1502:1;1491:13;1458:82;;;1462:3;;;1104:446;1013:543;;;:::o;1732:1345::-;1852:10;;-1:-1:-1;;;;;1874:30:33;;1871:56;;;1907:18;;:::i;:::-;1936:97;2026:6;1986:38;2018:4;2012:11;1986:38;:::i;:::-;1980:4;1936:97;:::i;:::-;2088:4;;2145:2;2134:14;;2162:1;2157:663;;;;2864:1;2881:6;2878:89;;;-1:-1:-1;2933:19:33;;;2927:26;2878:89;-1:-1:-1;;1689:1:33;1685:11;;;1681:24;1677:29;1667:40;1713:1;1709:11;;;1664:57;2980:81;;2127:944;;2157:663;960:1;953:14;;;997:4;984:18;;-1:-1:-1;;2193:20:33;;;2311:236;2325:7;2322:1;2319:14;2311:236;;;2414:19;;;2408:26;2393:42;;2506:27;;;;2474:1;2462:14;;;;2341:19;;2311:236;;;2315:3;2575:6;2566:7;2563:19;2560:201;;;2636:19;;;2630:26;-1:-1:-1;;2719:1:33;2715:14;;;2731:3;2711:24;2707:37;2703:42;2688:58;2673:74;;2560:201;-1:-1:-1;;;;;2807:1:33;2791:14;;;2787:22;2774:36;;-1:-1:-1;1732:1345:33:o;:::-;117:1570:31;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101005760003560e01c80636a62784211610097578063a22cb46511610066578063a22cb46514610210578063b88d4fde14610223578063c87b56dd14610236578063e985e9c51461024957600080fd5b80636a627842146101da57806370a08231146101ed578063864f4a9a1461020057806395d89b411461020857600080fd5b806323b872dd116100d357806323b872dd1461018f57806342842e0e146101a2578063534cfa3d146101b55780636352211e146101c757600080fd5b806301ffc9a71461010557806306fdde031461012d578063081812fc14610142578063095ea7b31461017a575b600080fd5b6101186101133660046114ac565b610292565b60405190151581526020015b60405180910390f35b610135610377565b6040516101249190611537565b61015561015036600461154a565b610409565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610124565b61018d610188366004611587565b61043f565b005b61018d61019d3660046115b1565b61044e565b61018d6101b03660046115b1565b610544565b6006545b604051908152602001610124565b6101556101d536600461154a565b610564565b6101b96101e83660046115ed565b61056f565b6101b96101fb3660046115ed565b61080d565b610135610888565b610135610934565b61018d61021e366004611608565b610943565b61018d610231366004611673565b61094e565b61013561024436600461154a565b610965565b61011861025736600461176d565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260056020908152604080832093909416825291909152205460ff1690565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f80ac58cd00000000000000000000000000000000000000000000000000000000148061032557507fffffffff0000000000000000000000000000000000000000000000000000000082167f5b5e139f00000000000000000000000000000000000000000000000000000000145b8061037157507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b606060008054610386906117a0565b80601f01602080910402602001604051908101604052809291908181526020018280546103b2906117a0565b80156103ff5780601f106103d4576101008083540402835291602001916103ff565b820191906000526020600020905b8154815290600101906020018083116103e257829003601f168201915b5050505050905090565b6000610414826109da565b5060008281526004602052604090205473ffffffffffffffffffffffffffffffffffffffff16610371565b61044a828233610a39565b5050565b73ffffffffffffffffffffffffffffffffffffffff82166104a3576040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600060048201526024015b60405180910390fd5b60006104b0838333610a46565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461053e576040517f64283d7b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8086166004830152602482018490528216604482015260640161049a565b50505050565b61055f8383836040518060200160405280600081525061094e565b505050565b6000610371826109da565b60003373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610636576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f556e617574686f72697a656420746f2063616c6c20746869732066756e63746960448201527f6f6e2e0000000000000000000000000000000000000000000000000000000000606482015260840161049a565b6006547f000000000000000000000000000000000000000000000000000000000000000081106106c2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f4d617820726561636865642e0000000000000000000000000000000000000000604482015260640161049a565b6001600660008282546106d591906117f3565b909155505073ffffffffffffffffffffffffffffffffffffffff831660009081526007602052604090205460ff161561076a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f416c7265616479206d696e7465642e0000000000000000000000000000000000604482015260640161049a565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260076020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790556107c28382610bc3565b604051819073ffffffffffffffffffffffffffffffffffffffff8516907f30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe90600090a390505b919050565b600073ffffffffffffffffffffffffffffffffffffffff821661085f576040517f89c62b640000000000000000000000000000000000000000000000000000000081526000600482015260240161049a565b5073ffffffffffffffffffffffffffffffffffffffff1660009081526003602052604090205490565b606060006108953361080d565b116108fc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f596f75206e656564206120646f696e6b20746f206261726b2100000000000000604482015260640161049a565b5060408051808201909152600581527f626f696e6b000000000000000000000000000000000000000000000000000000602082015290565b606060018054610386906117a0565b61044a338383610bdd565b61095984848461044e565b61053e84848484610cda565b6060610970826109da565b50600061098860408051602081019091526000815290565b905060008151116109a857604051806020016040528060008152506109d3565b806109b284610ed1565b6040516020016109c392919061182d565b6040516020818303038152906040525b9392505050565b60008181526002602052604081205473ffffffffffffffffffffffffffffffffffffffff1680610371576040517f7e2732890000000000000000000000000000000000000000000000000000000081526004810184905260240161049a565b61055f8383836001610f8f565b60008281526002602052604081205473ffffffffffffffffffffffffffffffffffffffff90811690831615610a8057610a8081848661115a565b73ffffffffffffffffffffffffffffffffffffffff811615610af657610aaa600085600080610f8f565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260036020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190555b73ffffffffffffffffffffffffffffffffffffffff851615610b3f5773ffffffffffffffffffffffffffffffffffffffff85166000908152600360205260409020805460010190555b60008481526002602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff89811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b61044a82826040518060200160405280600081525061120a565b73ffffffffffffffffffffffffffffffffffffffff8216610c42576040517f5b08ba1800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8316600482015260240161049a565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526005602090815260408083209487168084529482529182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff83163b1561053e576040517f150b7a0200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84169063150b7a0290610d4f90339088908790879060040161185c565b6020604051808303816000875af1925050508015610da8575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252610da5918101906118a5565b60015b610e37573d808015610dd6576040519150601f19603f3d011682016040523d82523d6000602084013e610ddb565b606091505b508051600003610e2f576040517f64a0ae9200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8516600482015260240161049a565b805181602001fd5b7fffffffff0000000000000000000000000000000000000000000000000000000081167f150b7a020000000000000000000000000000000000000000000000000000000014610eca576040517f64a0ae9200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8516600482015260240161049a565b5050505050565b60606000610ede83611221565b600101905060008167ffffffffffffffff811115610efe57610efe611644565b6040519080825280601f01601f191660200182016040528015610f28576020820181803683370190505b5090508181016020015b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8504945084610f3257509392505050565b8080610fb0575073ffffffffffffffffffffffffffffffffffffffff821615155b15611105576000610fc0846109da565b905073ffffffffffffffffffffffffffffffffffffffff83161580159061101357508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b8015611052575073ffffffffffffffffffffffffffffffffffffffff80821660009081526005602090815260408083209387168352929052205460ff16155b156110a1576040517fa9fbf51f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8416600482015260240161049a565b811561110357838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b611165838383611303565b61055f5773ffffffffffffffffffffffffffffffffffffffff83166111b9576040517f7e2732890000000000000000000000000000000000000000000000000000000081526004810182905260240161049a565b6040517f177e802f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff831660048201526024810182905260440161049a565b61121483836113ca565b61055f6000848484610cda565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000831061126a577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310611296576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106112b457662386f26fc10000830492506010015b6305f5e10083106112cc576305f5e100830492506008015b61271083106112e057612710830492506004015b606483106112f2576064830492506002015b600a83106103715760010192915050565b600073ffffffffffffffffffffffffffffffffffffffff8316158015906113c257508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611391575073ffffffffffffffffffffffffffffffffffffffff80851660009081526005602090815260408083209387168352929052205460ff165b806113c2575060008281526004602052604090205473ffffffffffffffffffffffffffffffffffffffff8481169116145b949350505050565b73ffffffffffffffffffffffffffffffffffffffff821661141a576040517f64a0ae920000000000000000000000000000000000000000000000000000000081526000600482015260240161049a565b600061142883836000610a46565b905073ffffffffffffffffffffffffffffffffffffffff81161561055f576040517f73c6ac6e0000000000000000000000000000000000000000000000000000000081526000600482015260240161049a565b7fffffffff00000000000000000000000000000000000000000000000000000000811681146114a957600080fd5b50565b6000602082840312156114be57600080fd5b81356109d38161147b565b60005b838110156114e45781810151838201526020016114cc565b50506000910152565b600081518084526115058160208601602086016114c9565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006109d360208301846114ed565b60006020828403121561155c57600080fd5b5035919050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461080857600080fd5b6000806040838503121561159a57600080fd5b6115a383611563565b946020939093013593505050565b6000806000606084860312156115c657600080fd5b6115cf84611563565b92506115dd60208501611563565b9150604084013590509250925092565b6000602082840312156115ff57600080fd5b6109d382611563565b6000806040838503121561161b57600080fd5b61162483611563565b91506020830135801515811461163957600080fd5b809150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000806000806080858703121561168957600080fd5b61169285611563565b93506116a060208601611563565b925060408501359150606085013567ffffffffffffffff808211156116c457600080fd5b818701915087601f8301126116d857600080fd5b8135818111156116ea576116ea611644565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171561173057611730611644565b816040528281528a602084870101111561174957600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561178057600080fd5b61178983611563565b915061179760208401611563565b90509250929050565b600181811c908216806117b457607f821691505b6020821081036117ed577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b80820180821115610371577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000835161183f8184602088016114c9565b8351908301906118538183602088016114c9565b01949350505050565b600073ffffffffffffffffffffffffffffffffffffffff80871683528086166020840152508360408301526080606083015261189b60808301846114ed565b9695505050505050565b6000602082840312156118b757600080fd5b81516109d38161147b56fea26469706673582212202b037d68ff0ea08857517ce431ef219ce1048f96f6b59b7c2dc3121adde3846864736f6c63430008170033",
    "sourceMap": "117:1570:31:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1561:300:21;;;;;;:::i;:::-;;:::i;:::-;;;611:14:33;;604:22;586:41;;574:2;559:18;1561:300:21;;;;;;;;2365:89;;;:::i;:::-;;;;;;;:::i;3497:154::-;;;;;;:::i;:::-;;:::i;:::-;;;1814:42:33;1802:55;;;1784:74;;1772:2;1757:18;3497:154:21;1638:226:33;3323:113:21;;;;;;:::i;:::-;;:::i;:::-;;4143:578;;;;;;:::i;:::-;;:::i;4787:132::-;;;;;;:::i;:::-;;:::i;1083:89:31:-;1151:14;;1083:89;;;2808:25:33;;;2796:2;2781:18;1083:89:31;2662:177:33;2185:118:21;;;;;;:::i;:::-;;:::i;1178:507:31:-;;;;;;:::i;:::-;;:::i;1920:208:21:-;;;;;;:::i;:::-;;:::i;921:156:31:-;;;:::i;2518:93:21:-;;;:::i;3718:144::-;;;;;;:::i;:::-;;:::i;4985:208::-;;;;;;:::i;:::-;;:::i;2677:255::-;;;;;;:::i;:::-;;:::i;3928:153::-;;;;;;:::i;:::-;4039:25;;;;4016:4;4039:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;3928:153;1561:300;1663:4;1698:40;;;1713:25;1698:40;;:104;;-1:-1:-1;1754:48:21;;;1769:33;1754:48;1698:104;:156;;;-1:-1:-1;876:25:27;861:40;;;;1818:36:21;1679:175;1561:300;-1:-1:-1;;1561:300:21:o;2365:89::-;2410:13;2442:5;2435:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:89;:::o;3497:154::-;3564:7;3583:22;3597:7;3583:13;:22::i;:::-;-1:-1:-1;6008:7:21;6034:24;;;:15;:24;;;;;;;;3623:21;5938:127;3323:113;3394:35;3403:2;3407:7;735:10:25;3394:8:21;:35::i;:::-;3323:113;;:::o;4143:578::-;4237:16;;;4233:87;;4276:33;;;;;4306:1;4276:33;;;1784:74:33;1757:18;;4276:33:21;;;;;;;;4233:87;4538:21;4562:34;4570:2;4574:7;735:10:25;4562:7:21;:34::i;:::-;4538:58;;4627:4;4610:21;;:13;:21;;;4606:109;;4654:50;;;;;5697:42:33;5766:15;;;4654:50:21;;;5748:34:33;5798:18;;;5791:34;;;5861:15;;5841:18;;;5834:43;5660:18;;4654:50:21;5485:398:33;4606:109:21;4223:498;4143:578;;;:::o;4787:132::-;4873:39;4890:4;4896:2;4900:7;4873:39;;;;;;;;;;;;:16;:39::i;:::-;4787:132;;;:::o;2185:118::-;2248:7;2274:22;2288:7;2274:13;:22::i;1178:507:31:-;1263:7;586:10;:22;600:8;586:22;;578:70;;;;;;;6090:2:33;578:70:31;;;6072:21:33;6129:2;6109:18;;;6102:30;6168:34;6148:18;;;6141:62;6239:5;6219:18;;;6212:33;6262:19;;578:70:31;5888:399:33;578:70:31;1339:14:::1;::::0;1376:9:::1;1371:14:::0;::::1;1363:39;;;::::0;::::1;::::0;;6494:2:33;1363:39:31::1;::::0;::::1;6476:21:33::0;6533:2;6513:18;;;6506:30;6572:14;6552:18;;;6545:42;6604:18;;1363:39:31::1;6292:336:33::0;1363:39:31::1;1430:1;1412:14;;:19;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;1518:17:31::1;::::0;::::1;;::::0;;;:7:::1;:17;::::0;;;;;::::1;;1517:18;1509:46;;;::::0;::::1;::::0;;7119:2:33;1509:46:31::1;::::0;::::1;7101:21:33::0;7158:2;7138:18;;;7131:30;7197:17;7177:18;;;7170:45;7232:18;;1509:46:31::1;6917:339:33::0;1509:46:31::1;1565:17;::::0;::::1;;::::0;;;:7:::1;:17;::::0;;;;:24;;;::::1;1585:4;1565:24;::::0;;1600:23:::1;1573:8:::0;1620:2;1600:9:::1;:23::i;:::-;1639:20;::::0;1656:2;;1639:20:::1;::::0;::::1;::::0;::::1;::::0;;;::::1;1676:2:::0;-1:-1:-1;658:1:31::1;1178:507:::0;;;:::o;1920:208:21:-;1983:7;2006:19;;;2002:87;;2048:30;;;;;2075:1;2048:30;;;1784:74:33;1757:18;;2048:30:21;1638:226:33;2002:87:21;-1:-1:-1;2105:16:21;;;;;;:9;:16;;;;;;;1920:208::o;921:156:31:-;958:13;1015:1;991:21;1001:10;991:9;:21::i;:::-;:25;983:63;;;;;;;7463:2:33;983:63:31;;;7445:21:33;7502:2;7482:18;;;7475:30;7541:27;7521:18;;;7514:55;7586:18;;983:63:31;7261:349:33;983:63:31;-1:-1:-1;1056:14:31;;;;;;;;;;;;;;;;;;921:156::o;2518:93:21:-;2565:13;2597:7;2590:14;;;;;:::i;3718:144::-;3803:52;735:10:25;3836:8:21;3846;3803:18;:52::i;4985:208::-;5098:31;5111:4;5117:2;5121:7;5098:12;:31::i;:::-;5139:47;5162:4;5168:2;5172:7;5181:4;5139:22;:47::i;2677:255::-;2741:13;2766:22;2780:7;2766:13;:22::i;:::-;;2799:21;2823:10;3250:9;;;;;;;;;-1:-1:-1;3250:9:21;;;3174:92;2823:10;2799:34;;2874:1;2856:7;2850:21;:25;:75;;;;;;;;;;;;;;;;;2892:7;2901:18;:7;:16;:18::i;:::-;2878:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2850:75;2843:82;2677:255;-1:-1:-1;;;2677:255:21:o;16138:241::-;16201:7;5799:16;;;:7;:16;;;;;;;;;16263:88;;16309:31;;;;;;;;2808:25:33;;;2781:18;;16309:31:21;2662:177:33;14418:120:21;14498:33;14507:2;14511:7;14520:4;14526;14498:8;:33::i;8838:795::-;8924:7;5799:16;;;:7;:16;;;;;;;;;;;9035:18;;;9031:86;;9069:37;9086:4;9092;9098:7;9069:16;:37::i;:::-;9161:18;;;;9157:256;;9277:48;9294:1;9298:7;9315:1;9319:5;9277:8;:48::i;:::-;9368:15;;;;;;;:9;:15;;;;;:20;;;;;;9157:256;9427:16;;;;9423:107;;9487:13;;;;;;;:9;:13;;;;;:18;;9504:1;9487:18;;;9423:107;9540:16;;;;:7;:16;;;;;;:21;;;;;;;;;;;;;;9577:27;;9540:16;;9577:27;;;;;;;9622:4;8838:795;-1:-1:-1;;;;8838:795:21:o;10633:100::-;10700:26;10710:2;10714:7;10700:26;;;;;;;;;;;;:9;:26::i;15591:312::-;15698:22;;;15694:91;;15743:31;;;;;1814:42:33;1802:55;;15743:31:21;;;1784:74:33;1757:18;;15743:31:21;1638:226:33;15694:91:21;15794:25;;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;;;;;;;;;;;;15855:41;;586::33;;;15855::21;;559:18:33;15855:41:21;;;;;;;15591:312;;;:::o;16918:782::-;17034:14;;;;:18;17030:664;;17072:71;;;;;:36;;;;;;:71;;735:10:25;;17123:4:21;;17129:7;;17138:4;;17072:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17072:71:21;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;17068:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17381:6;:13;17398:1;17381:18;17377:293;;17430:25;;;;;1814:42:33;1802:55;;17430:25:21;;;1784:74:33;1757:18;;17430:25:21;1638:226:33;17377:293:21;17622:6;17616:13;17607:6;17603:2;17599:15;17592:38;17068:616;17190:51;;;17200:41;17190:51;17186:130;;17272:25;;;;;1814:42:33;1802:55;;17272:25:21;;;1784:74:33;1757:18;;17272:25:21;1638:226:33;17186:130:21;17144:186;16918:782;;;;:::o;637:698:26:-;693:13;742:14;759:17;770:5;759:10;:17::i;:::-;779:1;759:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:18:26;-1:-1:-1;794:41:26;-1:-1:-1;955:28:26;;;971:2;955:28;1010:282;1041:5;;1180:10;1175:2;1164:14;;1159:32;1041:5;1146:46;1236:2;1227:11;;;-1:-1:-1;1256:21:26;1010:282;1256:21;-1:-1:-1;1312:6:26;637:698;-1:-1:-1;;;637:698:26:o;14720:662:21:-;14880:9;:31;;;-1:-1:-1;14893:18:21;;;;;14880:31;14876:460;;;14927:13;14943:22;14957:7;14943:13;:22::i;:::-;14927:38;-1:-1:-1;15093:18:21;;;;;;;:35;;;15124:4;15115:13;;:5;:13;;;;15093:35;:69;;;;-1:-1:-1;4039:25:21;;;;4016:4;4039:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;15132:30;15093:69;15089:142;;;15189:27;;;;;1814:42:33;1802:55;;15189:27:21;;;1784:74:33;1757:18;;15189:27:21;1638:226:33;15089:142:21;15249:9;15245:81;;;15303:7;15299:2;15283:28;;15292:5;15283:28;;;;;;;;;;;;15245:81;14913:423;14876:460;-1:-1:-1;;15346:24:21;;;;:15;:24;;;;;:29;;;;;;;;;;;;;;;14720:662::o;7082:368::-;7194:38;7208:5;7215:7;7224;7194:13;:38::i;:::-;7189:255;;7252:19;;;7248:186;;7298:31;;;;;;;;2808:25:33;;;2781:18;;7298:31:21;2662:177:33;7248:186:21;7375:44;;;;;9280:42:33;9268:55;;7375:44:21;;;9250:74:33;9340:18;;;9333:34;;;9223:18;;7375:44:21;9076:297:33;10954:182:21;11048:18;11054:2;11058:7;11048:5;:18::i;:::-;11076:53;11107:1;11111:2;11115:7;11124:4;11076:22;:53::i;12214:916:29:-;12267:7;;12351:8;12342:17;;12338:103;;12388:8;12379:17;;;-1:-1:-1;12424:2:29;12414:12;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;-1:-1:-1;12540:2:29;12530:12;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;-1:-1:-1;12656:2:29;12646:12;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;-1:-1:-1;12770:1:29;12760:11;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;-1:-1:-1;12883:1:29;12873:11;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;-1:-1:-1;12996:1:29;12986:11;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;13117:6;12214:916;-1:-1:-1;;12214:916:29:o;6376:272:21:-;6479:4;6514:21;;;;;;;:127;;;6561:7;6552:16;;:5;:16;;;:52;;;-1:-1:-1;4039:25:21;;;;4016:4;4039:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;6572:32;6552:88;;;-1:-1:-1;6008:7:21;6034:24;;;:15;:24;;;;;;6608:32;;;;6034:24;;6608:32;6552:88;6495:146;6376:272;-1:-1:-1;;;;6376:272:21:o;9955:327::-;10022:16;;;10018:87;;10061:33;;;;;10091:1;10061:33;;;1784:74:33;1757:18;;10061:33:21;1638:226:33;10018:87:21;10114:21;10138:32;10146:2;10150:7;10167:1;10138:7;:32::i;:::-;10114:56;-1:-1:-1;10184:27:21;;;;10180:96;;10234:31;;;;;10262:1;10234:31;;;1784:74:33;1757:18;;10234:31:21;1638:226:33;14:177;99:66;92:5;88:78;81:5;78:89;68:117;;181:1;178;171:12;68:117;14:177;:::o;196:245::-;254:6;307:2;295:9;286:7;282:23;278:32;275:52;;;323:1;320;313:12;275:52;362:9;349:23;381:30;405:5;381:30;:::i;638:250::-;723:1;733:113;747:6;744:1;741:13;733:113;;;823:11;;;817:18;804:11;;;797:39;769:2;762:10;733:113;;;-1:-1:-1;;880:1:33;862:16;;855:27;638:250::o;893:330::-;935:3;973:5;967:12;1000:6;995:3;988:19;1016:76;1085:6;1078:4;1073:3;1069:14;1062:4;1055:5;1051:16;1016:76;:::i;:::-;1137:2;1125:15;1142:66;1121:88;1112:98;;;;1212:4;1108:109;;893:330;-1:-1:-1;;893:330:33:o;1228:220::-;1377:2;1366:9;1359:21;1340:4;1397:45;1438:2;1427:9;1423:18;1415:6;1397:45;:::i;1453:180::-;1512:6;1565:2;1553:9;1544:7;1540:23;1536:32;1533:52;;;1581:1;1578;1571:12;1533:52;-1:-1:-1;1604:23:33;;1453:180;-1:-1:-1;1453:180:33:o;1869:196::-;1937:20;;1997:42;1986:54;;1976:65;;1966:93;;2055:1;2052;2045:12;2070:254;2138:6;2146;2199:2;2187:9;2178:7;2174:23;2170:32;2167:52;;;2215:1;2212;2205:12;2167:52;2238:29;2257:9;2238:29;:::i;:::-;2228:39;2314:2;2299:18;;;;2286:32;;-1:-1:-1;;;2070:254:33:o;2329:328::-;2406:6;2414;2422;2475:2;2463:9;2454:7;2450:23;2446:32;2443:52;;;2491:1;2488;2481:12;2443:52;2514:29;2533:9;2514:29;:::i;:::-;2504:39;;2562:38;2596:2;2585:9;2581:18;2562:38;:::i;:::-;2552:48;;2647:2;2636:9;2632:18;2619:32;2609:42;;2329:328;;;;;:::o;2844:186::-;2903:6;2956:2;2944:9;2935:7;2931:23;2927:32;2924:52;;;2972:1;2969;2962:12;2924:52;2995:29;3014:9;2995:29;:::i;3035:347::-;3100:6;3108;3161:2;3149:9;3140:7;3136:23;3132:32;3129:52;;;3177:1;3174;3167:12;3129:52;3200:29;3219:9;3200:29;:::i;:::-;3190:39;;3279:2;3268:9;3264:18;3251:32;3326:5;3319:13;3312:21;3305:5;3302:32;3292:60;;3348:1;3345;3338:12;3292:60;3371:5;3361:15;;;3035:347;;;;;:::o;3387:184::-;3439:77;3436:1;3429:88;3536:4;3533:1;3526:15;3560:4;3557:1;3550:15;3576:1197;3671:6;3679;3687;3695;3748:3;3736:9;3727:7;3723:23;3719:33;3716:53;;;3765:1;3762;3755:12;3716:53;3788:29;3807:9;3788:29;:::i;:::-;3778:39;;3836:38;3870:2;3859:9;3855:18;3836:38;:::i;:::-;3826:48;;3921:2;3910:9;3906:18;3893:32;3883:42;;3976:2;3965:9;3961:18;3948:32;3999:18;4040:2;4032:6;4029:14;4026:34;;;4056:1;4053;4046:12;4026:34;4094:6;4083:9;4079:22;4069:32;;4139:7;4132:4;4128:2;4124:13;4120:27;4110:55;;4161:1;4158;4151:12;4110:55;4197:2;4184:16;4219:2;4215;4212:10;4209:36;;;4225:18;;:::i;:::-;4359:2;4353:9;4421:4;4413:13;;4264:66;4409:22;;;4433:2;4405:31;4401:40;4389:53;;;4457:18;;;4477:22;;;4454:46;4451:72;;;4503:18;;:::i;:::-;4543:10;4539:2;4532:22;4578:2;4570:6;4563:18;4618:7;4613:2;4608;4604;4600:11;4596:20;4593:33;4590:53;;;4639:1;4636;4629:12;4590:53;4695:2;4690;4686;4682:11;4677:2;4669:6;4665:15;4652:46;4740:1;4735:2;4730;4722:6;4718:15;4714:24;4707:35;4761:6;4751:16;;;;;;;3576:1197;;;;;;;:::o;4778:260::-;4846:6;4854;4907:2;4895:9;4886:7;4882:23;4878:32;4875:52;;;4923:1;4920;4913:12;4875:52;4946:29;4965:9;4946:29;:::i;:::-;4936:39;;4994:38;5028:2;5017:9;5013:18;4994:38;:::i;:::-;4984:48;;4778:260;;;;;:::o;5043:437::-;5122:1;5118:12;;;;5165;;;5186:61;;5240:4;5232:6;5228:17;5218:27;;5186:61;5293:2;5285:6;5282:14;5262:18;5259:38;5256:218;;5330:77;5327:1;5320:88;5431:4;5428:1;5421:15;5459:4;5456:1;5449:15;5256:218;;5043:437;;;:::o;6633:279::-;6698:9;;;6719:10;;;6716:190;;;6762:77;6759:1;6752:88;6863:4;6860:1;6853:15;6891:4;6888:1;6881:15;7615:496;7794:3;7832:6;7826:13;7848:66;7907:6;7902:3;7895:4;7887:6;7883:17;7848:66;:::i;:::-;7977:13;;7936:16;;;;7999:70;7977:13;7936:16;8046:4;8034:17;;7999:70;:::i;:::-;8085:20;;7615:496;-1:-1:-1;;;;7615:496:33:o;8116:512::-;8310:4;8339:42;8420:2;8412:6;8408:15;8397:9;8390:34;8472:2;8464:6;8460:15;8455:2;8444:9;8440:18;8433:43;;8512:6;8507:2;8496:9;8492:18;8485:34;8555:3;8550:2;8539:9;8535:18;8528:31;8576:46;8617:3;8606:9;8602:19;8594:6;8576:46;:::i;:::-;8568:54;8116:512;-1:-1:-1;;;;;;8116:512:33:o;8633:249::-;8702:6;8755:2;8743:9;8734:7;8730:23;8726:32;8723:52;;;8771:1;8768;8761:12;8723:52;8803:9;8797:16;8822:30;8846:5;8822:30;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "47704": [{ "start": 1595, "length": 32 }],
      "47710": [{ "start": 1417, "length": 32 }]
    }
  },
  "methodIdentifiers": {
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "bark()": "864f4a9a",
    "getApproved(uint256)": "081812fc",
    "isApprovedForAll(address,address)": "e985e9c5",
    "mint(address)": "6a627842",
    "name()": "06fdde03",
    "nextDoink()": "534cfa3d",
    "ownerOf(uint256)": "6352211e",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxCount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bark\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextDoink\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Doink.sol\":\"Doink\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"src/Doink.sol\":{\"keccak256\":\"0x0ec022dac7a317a196f92819da62fc41a01b63cbb0fd901fe614034318a19813\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://829fc8a8b2ef99db32b0f767db050a4ee56405bf38323fb8f7fda6c295be9aa2\",\"dweb:/ipfs/QmaqJ1Tyd4XRJAFMui1xjFjLUJHMfwgA99hiXsA9MYLMCe\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.23+commit.f704f362" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            { "internalType": "uint256", "name": "maxCount", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "sender", "type": "address" },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" },
            { "internalType": "address", "name": "owner", "type": "address" }
          ],
          "type": "error",
          "name": "ERC721IncorrectOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "type": "error",
          "name": "ERC721InsufficientApproval"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "approver", "type": "address" }
          ],
          "type": "error",
          "name": "ERC721InvalidApprover"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "operator", "type": "address" }
          ],
          "type": "error",
          "name": "ERC721InvalidOperator"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" }
          ],
          "type": "error",
          "name": "ERC721InvalidOwner"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "receiver", "type": "address" }
          ],
          "type": "error",
          "name": "ERC721InvalidReceiver"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "sender", "type": "address" }
          ],
          "type": "error",
          "name": "ERC721InvalidSender"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "type": "error",
          "name": "ERC721NonexistentToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Minted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "bark",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" },
            { "internalType": "address", "name": "operator", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "receiver", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nextDoink",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "from", "type": "address" },
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "from", "type": "address" },
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" },
            { "internalType": "bytes", "name": "data", "type": "bytes" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            { "internalType": "bool", "name": "approved", "type": "bool" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "from", "type": "address" },
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": { "details": "See {IERC721-approve}." },
          "balanceOf(address)": { "details": "See {IERC721-balanceOf}." },
          "getApproved(uint256)": { "details": "See {IERC721-getApproved}." },
          "isApprovedForAll(address,address)": {
            "details": "See {IERC721-isApprovedForAll}."
          },
          "name()": { "details": "See {IERC721Metadata-name}." },
          "ownerOf(uint256)": { "details": "See {IERC721-ownerOf}." },
          "safeTransferFrom(address,address,uint256)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {IERC721-setApprovalForAll}."
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "symbol()": { "details": "See {IERC721Metadata-symbol}." },
          "tokenURI(uint256)": { "details": "See {IERC721Metadata-tokenURI}." },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC721-transferFrom}."
          }
        },
        "version": 1
      },
      "userdoc": { "kind": "user", "methods": {}, "version": 1 }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/"
      ],
      "optimizer": { "enabled": true, "runs": 20000 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": { "src/Doink.sol": "Doink" },
      "evmVersion": "paris",
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7",
        "urls": [
          "bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f",
          "dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784",
        "urls": [
          "bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd",
          "dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4",
        "urls": [
          "bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7",
          "dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49",
        "urls": [
          "bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22",
          "dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1",
        "urls": [
          "bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02",
          "dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792",
        "urls": [
          "bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453",
          "dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133",
        "urls": [
          "bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8",
          "dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b",
        "urls": [
          "bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df",
          "dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d",
        "urls": [
          "bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875",
          "dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72",
        "urls": [
          "bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc",
          "dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT"
        ],
        "license": "MIT"
      },
      "src/Doink.sol": {
        "keccak256": "0x0ec022dac7a317a196f92819da62fc41a01b63cbb0fd901fe614034318a19813",
        "urls": [
          "bzz-raw://829fc8a8b2ef99db32b0f767db050a4ee56405bf38323fb8f7fda6c295be9aa2",
          "dweb:/ipfs/QmaqJ1Tyd4XRJAFMui1xjFjLUJHMfwgA99hiXsA9MYLMCe"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/Doink.sol",
    "id": 47835,
    "exportedSymbols": {
      "Context": [46238],
      "Doink": [47834],
      "ERC165": [46517],
      "ERC721": [46045],
      "IERC165": [46529],
      "IERC721": [46162],
      "IERC721Errors": [44989],
      "IERC721Metadata": [46208],
      "IERC721Receiver": [46180],
      "Strings": [46493]
    },
    "nodeType": "SourceUnit",
    "src": "32:1656:31",
    "nodes": [
      {
        "id": 47690,
        "nodeType": "PragmaDirective",
        "src": "32:24:31",
        "nodes": [],
        "literals": ["solidity", "^", "0.8", ".14"]
      },
      {
        "id": 47691,
        "nodeType": "ImportDirective",
        "src": "58:57:31",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47835,
        "sourceUnit": 46046,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 47834,
        "nodeType": "ContractDefinition",
        "src": "117:1570:31",
        "nodes": [
          {
            "id": 47699,
            "nodeType": "EventDefinition",
            "src": "148:59:31",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe",
            "name": "Minted",
            "nameLocation": "154:6:31",
            "parameters": {
              "id": 47698,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47695,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "177:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 47699,
                  "src": "161:24:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47694,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "161:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47697,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "203:2:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 47699,
                  "src": "187:18:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47696,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "187:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "160:46:31"
            }
          },
          {
            "id": 47702,
            "nodeType": "VariableDeclaration",
            "src": "213:34:31",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "currentTokenId",
            "nameLocation": "229:14:31",
            "scope": 47834,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 47700,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "213:7:31",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 47701,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "246:1:31",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "private"
          },
          {
            "id": 47704,
            "nodeType": "VariableDeclaration",
            "src": "253:35:31",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "MAX_COUNT",
            "nameLocation": "279:9:31",
            "scope": 47834,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 47703,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "253:7:31",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "id": 47708,
            "nodeType": "VariableDeclaration",
            "src": "449:47:31",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "minters",
            "nameLocation": "489:7:31",
            "scope": 47834,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 47707,
              "keyName": "minter",
              "keyNameLocation": "465:6:31",
              "keyType": {
                "id": 47705,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "457:7:31",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "449:31:31",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 47706,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "475:4:31",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 47710,
            "nodeType": "VariableDeclaration",
            "src": "503:34:31",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "OPERATOR",
            "nameLocation": "529:8:31",
            "scope": 47834,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 47709,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "503:7:31",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "id": 47722,
            "nodeType": "ModifierDefinition",
            "src": "544:122:31",
            "nodes": [],
            "body": {
              "id": 47721,
              "nodeType": "Block",
              "src": "568:98:31",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 47716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 47713,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "586:3:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 47714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "590:6:31",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "586:10:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 47715,
                          "name": "OPERATOR",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47710,
                          "src": "600:8:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "586:22:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e617574686f72697a656420746f2063616c6c20746869732066756e6374696f6e2e",
                        "id": 47717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "610:37:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ff354f9c75003e1a7ba57297bb86406670fcfd92d5430db2ba7dd54865ccb69e",
                          "typeString": "literal_string \"Unauthorized to call this function.\""
                        },
                        "value": "Unauthorized to call this function."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_bool", "typeString": "bool" },
                        {
                          "typeIdentifier": "t_stringliteral_ff354f9c75003e1a7ba57297bb86406670fcfd92d5430db2ba7dd54865ccb69e",
                          "typeString": "literal_string \"Unauthorized to call this function.\""
                        }
                      ],
                      "id": 47712,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "578:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 47718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "578:70:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47719,
                  "nodeType": "ExpressionStatement",
                  "src": "578:70:31"
                },
                {
                  "id": 47720,
                  "nodeType": "PlaceholderStatement",
                  "src": "658:1:31"
                }
              ]
            },
            "name": "onlyOperator",
            "nameLocation": "553:12:31",
            "parameters": {
              "id": 47711,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "565:2:31"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 47756,
            "nodeType": "FunctionDefinition",
            "src": "672:243:31",
            "nodes": [],
            "body": {
              "id": 47755,
              "nodeType": "Block",
              "src": "745:170:31",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 47738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 47733,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47724,
                      "src": "759:8:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 47736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "779:1:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 47735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "771:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 47734,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "771:7:31",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 47737,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "771:10:31",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "759:22:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 47749,
                    "nodeType": "Block",
                    "src": "835:44:31",
                    "statements": [
                      {
                        "expression": {
                          "id": 47747,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 47745,
                            "name": "OPERATOR",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47710,
                            "src": "849:8:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 47746,
                            "name": "operator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47724,
                            "src": "860:8:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "849:19:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 47748,
                        "nodeType": "ExpressionStatement",
                        "src": "849:19:31"
                      }
                    ]
                  },
                  "id": 47750,
                  "nodeType": "IfStatement",
                  "src": "755:124:31",
                  "trueBody": {
                    "id": 47744,
                    "nodeType": "Block",
                    "src": "783:46:31",
                    "statements": [
                      {
                        "expression": {
                          "id": 47742,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 47739,
                            "name": "OPERATOR",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47710,
                            "src": "797:8:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 47740,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "808:3:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 47741,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "812:6:31",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "808:10:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "797:21:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 47743,
                        "nodeType": "ExpressionStatement",
                        "src": "797:21:31"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 47753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47751,
                      "name": "MAX_COUNT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47704,
                      "src": "888:9:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 47752,
                      "name": "maxCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47726,
                      "src": "900:8:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "888:20:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 47754,
                  "nodeType": "ExpressionStatement",
                  "src": "888:20:31"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "446f696e6b",
                    "id": 47729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "727:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_30336595d3b3d5a8b01725ce6ffea05137382a3f8890ac042e923321289f0b55",
                      "typeString": "literal_string \"Doink\""
                    },
                    "value": "Doink"
                  },
                  {
                    "hexValue": "444f494e4b",
                    "id": 47730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "736:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_a59b2d533a48d7e6dc995195693cdef1da96a4fcf0b3a4d9c4f0b3d0879fc016",
                      "typeString": "literal_string \"DOINK\""
                    },
                    "value": "DOINK"
                  }
                ],
                "id": 47731,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 47728,
                  "name": "ERC721",
                  "nameLocations": ["720:6:31"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46045,
                  "src": "720:6:31"
                },
                "nodeType": "ModifierInvocation",
                "src": "720:24:31"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 47727,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47724,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "692:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 47756,
                  "src": "684:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47723,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "684:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47726,
                  "mutability": "mutable",
                  "name": "maxCount",
                  "nameLocation": "710:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 47756,
                  "src": "702:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47725,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "702:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "683:36:31"
            },
            "returnParameters": {
              "id": 47732,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "745:0:31"
            },
            "scope": 47834,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 47774,
            "nodeType": "FunctionDefinition",
            "src": "921:156:31",
            "nodes": [],
            "body": {
              "id": 47773,
              "nodeType": "Block",
              "src": "973:104:31",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 47767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 47763,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1001:3:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 47764,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1005:6:31",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1001:10:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 47762,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45165,
                            "src": "991:9:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 47765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "991:21:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 47766,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1015:1:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "991:25:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206e656564206120646f696e6b20746f206261726b21",
                        "id": 47768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1018:27:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_18e00050d501480ce1c5c7216fde3a205ea7bc024b7198037d129e0774f6ba7c",
                          "typeString": "literal_string \"You need a doink to bark!\""
                        },
                        "value": "You need a doink to bark!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_bool", "typeString": "bool" },
                        {
                          "typeIdentifier": "t_stringliteral_18e00050d501480ce1c5c7216fde3a205ea7bc024b7198037d129e0774f6ba7c",
                          "typeString": "literal_string \"You need a doink to bark!\""
                        }
                      ],
                      "id": 47761,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "983:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 47769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "983:63:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47770,
                  "nodeType": "ExpressionStatement",
                  "src": "983:63:31"
                },
                {
                  "expression": {
                    "hexValue": "626f696e6b",
                    "id": 47771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1063:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_303fbc7810fa0ce0f8fc17b260b45e90655720c65a7ac82d148ac01441af5acf",
                      "typeString": "literal_string \"boink\""
                    },
                    "value": "boink"
                  },
                  "functionReturnParameters": 47760,
                  "id": 47772,
                  "nodeType": "Return",
                  "src": "1056:14:31"
                }
              ]
            },
            "functionSelector": "864f4a9a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bark",
            "nameLocation": "930:4:31",
            "parameters": {
              "id": 47757,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "934:2:31"
            },
            "returnParameters": {
              "id": 47760,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47759,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 47774,
                  "src": "958:13:31",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 47758,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "958:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "957:15:31"
            },
            "scope": 47834,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 47782,
            "nodeType": "FunctionDefinition",
            "src": "1083:89:31",
            "nodes": [],
            "body": {
              "id": 47781,
              "nodeType": "Block",
              "src": "1134:38:31",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 47779,
                    "name": "currentTokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 47702,
                    "src": "1151:14:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 47778,
                  "id": 47780,
                  "nodeType": "Return",
                  "src": "1144:21:31"
                }
              ]
            },
            "functionSelector": "534cfa3d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nextDoink",
            "nameLocation": "1092:9:31",
            "parameters": {
              "id": 47775,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1101:2:31"
            },
            "returnParameters": {
              "id": 47778,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47777,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 47782,
                  "src": "1125:7:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47776,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1125:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1124:9:31"
            },
            "scope": 47834,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 47833,
            "nodeType": "FunctionDefinition",
            "src": "1178:507:31",
            "nodes": [],
            "body": {
              "id": 47832,
              "nodeType": "Block",
              "src": "1276:409:31",
              "nodes": [],
              "statements": [
                {
                  "assignments": [47792],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 47792,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "1334:2:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 47832,
                      "src": "1326:10:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 47791,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1326:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 47794,
                  "initialValue": {
                    "id": 47793,
                    "name": "currentTokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 47702,
                    "src": "1339:14:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1326:27:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 47798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 47796,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47792,
                          "src": "1371:2:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 47797,
                          "name": "MAX_COUNT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47704,
                          "src": "1376:9:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1371:14:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d617820726561636865642e",
                        "id": 47799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1387:14:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3eae332ea7329ab6a80be772846b8570ddb5b0a36c6a4ce2236e6ddcaf92f65b",
                          "typeString": "literal_string \"Max reached.\""
                        },
                        "value": "Max reached."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_bool", "typeString": "bool" },
                        {
                          "typeIdentifier": "t_stringliteral_3eae332ea7329ab6a80be772846b8570ddb5b0a36c6a4ce2236e6ddcaf92f65b",
                          "typeString": "literal_string \"Max reached.\""
                        }
                      ],
                      "id": 47795,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "1363:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 47800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1363:39:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47801,
                  "nodeType": "ExpressionStatement",
                  "src": "1363:39:31"
                },
                {
                  "expression": {
                    "id": 47804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47802,
                      "name": "currentTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47702,
                      "src": "1412:14:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 47803,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1430:1:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1412:19:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 47805,
                  "nodeType": "ExpressionStatement",
                  "src": "1412:19:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 47810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1517:18:31",
                        "subExpression": {
                          "baseExpression": {
                            "id": 47807,
                            "name": "minters",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47708,
                            "src": "1518:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 47809,
                          "indexExpression": {
                            "id": 47808,
                            "name": "receiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47784,
                            "src": "1526:8:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1518:17:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c7265616479206d696e7465642e",
                        "id": 47811,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1537:17:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4a733b6fc0cccbdab351469a7d2e147a5158655c7e778c19c57b9897dda0c120",
                          "typeString": "literal_string \"Already minted.\""
                        },
                        "value": "Already minted."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_bool", "typeString": "bool" },
                        {
                          "typeIdentifier": "t_stringliteral_4a733b6fc0cccbdab351469a7d2e147a5158655c7e778c19c57b9897dda0c120",
                          "typeString": "literal_string \"Already minted.\""
                        }
                      ],
                      "id": 47806,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "1509:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 47812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1509:46:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47813,
                  "nodeType": "ExpressionStatement",
                  "src": "1509:46:31"
                },
                {
                  "expression": {
                    "id": 47818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 47814,
                        "name": "minters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47708,
                        "src": "1565:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 47816,
                      "indexExpression": {
                        "id": 47815,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47784,
                        "src": "1573:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1565:17:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 47817,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1585:4:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1565:24:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 47819,
                  "nodeType": "ExpressionStatement",
                  "src": "1565:24:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 47821,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47784,
                        "src": "1610:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 47822,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47792,
                        "src": "1620:2:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 47820,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [45667, 45693],
                      "referencedDeclaration": 45667,
                      "src": "1600:9:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 47823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1600:23:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47824,
                  "nodeType": "ExpressionStatement",
                  "src": "1600:23:31"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 47826,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47784,
                        "src": "1646:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 47827,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47792,
                        "src": "1656:2:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 47825,
                      "name": "Minted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47699,
                      "src": "1639:6:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 47828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1639:20:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47829,
                  "nodeType": "EmitStatement",
                  "src": "1634:25:31"
                },
                {
                  "expression": {
                    "id": 47830,
                    "name": "id",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 47792,
                    "src": "1676:2:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 47790,
                  "id": 47831,
                  "nodeType": "Return",
                  "src": "1669:9:31"
                }
              ]
            },
            "functionSelector": "6a627842",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 47787,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 47786,
                  "name": "onlyOperator",
                  "nameLocations": ["1233:12:31"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 47722,
                  "src": "1233:12:31"
                },
                "nodeType": "ModifierInvocation",
                "src": "1233:12:31"
              }
            ],
            "name": "mint",
            "nameLocation": "1187:4:31",
            "parameters": {
              "id": 47785,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47784,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "1200:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 47833,
                  "src": "1192:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47783,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1192:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1191:18:31"
            },
            "returnParameters": {
              "id": 47790,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47789,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 47833,
                  "src": "1263:7:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47788,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1263:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1262:9:31"
            },
            "scope": 47834,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 47692,
              "name": "ERC721",
              "nameLocations": ["135:6:31"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 46045,
              "src": "135:6:31"
            },
            "id": 47693,
            "nodeType": "InheritanceSpecifier",
            "src": "135:6:31"
          }
        ],
        "canonicalName": "Doink",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          47834, 46045, 44989, 46208, 46162, 46517, 46529, 46238
        ],
        "name": "Doink",
        "nameLocation": "126:5:31",
        "scope": 47835,
        "usedErrors": [44947, 44952, 44961, 44966, 44971, 44978, 44983, 44988],
        "usedEvents": [46061, 46070, 46079, 47699]
      }
    ],
    "license": "MIT"
  },
  "id": 31
}
